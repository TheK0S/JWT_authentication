@model JWT_authentication.Models.LoginViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1>Login</h1>

    <hr />
    <div class="row d-flex justify-content-center">
        <div class="col-md-4">
            <p id="userName"></p>
            <p id="userInfo"></p>
            <form asp-action="Login" id="loginForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" id="email" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" id="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <input id="submitLogin" type="submit" class="btn btn-primary w-100" value="Submit" />
                </div>
                <div class="form-group mb-3">
                    <input id="getData" type="button" class="btn btn-primary w-100" value="GetData" />
                </div>
            </form>
        </div>
    </div>
    
</div>
<script>
    var tokenKey = "accessToken";
    // при нажатии на кнопку отправки формы идет запрос к /login для получения токена
    document.getElementById("submitLogin").addEventListener("click", async e => {
        e.preventDefault();
        // отправляет запрос и получаем ответ
        const response = await fetch("/login", {
            method: "POST",
            headers: { "Accept": "application/json", "Content-Type": "application/json" },
            body: JSON.stringify({
                name: document.getElementById("email").value,
                password: document.getElementById("password").value
            })
        });
        // если запрос прошел нормально
        if (response.ok === true) {
            // получаем данные
            const data = await response.json();
            // изменяем содержимое и видимость блоков на странице
            document.getElementById("userName").innerText = data.username;
            document.getElementById("userInfo").style.display = "block";
            document.getElementById("loginForm").style.display = "none";
            // сохраняем в хранилище sessionStorage токен доступа
            sessionStorage.setItem(tokenKey, data.access_token);
        }
        else  // если произошла ошибка, получаем код статуса
            console.log("Status: ", response.status);
    });

    // кнопка для обращения по пути "/data" для получения данных
    document.getElementById("getData").addEventListener("click", async e => {
        e.preventDefault();
        // получаем токен из sessionStorage
        const token = sessionStorage.getItem(tokenKey);
        // отправляем запрос к "/data
        const response = await fetch("/data", {
            method: "GET",
            headers:
            {
                "Accept": "application/json",
                "Authorization": "Bearer " + token  // передача токена в заголовке
            }
        });

        if (response.ok === true) {
            const data = await response.json();
            alert(data.message);
        }
        else
            console.log("Status: ", response.status);
    });

    // условный выход - просто удаляем токен и меняем видимость блоков
    document.getElementById("logOut").addEventListener("click", e => {

        e.preventDefault();
        document.getElementById("userName").innerText = "";
        document.getElementById("userInfo").style.display = "none";
        document.getElementById("loginForm").style.display = "block";
        sessionStorage.removeItem(tokenKey);
    });
</script>
